{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prcue\\\\OneDrive\\\\Curso 4\\\\TFG GITT\\\\5. Desarrollo\\\\3. Frontend\\\\frontend_v3\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { fetchHashes, refreshToken, deleteHash, editHash, saveHash } from \"./apiServices\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"./DataTable\";\nimport ModalComponent from \"./ModalComponent\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport NotLoggedInComponent from \"./NotLoggedInComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [hashData, setHashData] = useState(null);\n  const [hashValue, setHashValue] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  useEffect(() => {\n    if (!currentUser) return;\n    const fetchData = async () => {\n      try {\n        const data = await fetchHashes();\n        setHashData(data);\n      } catch (error) {\n        handleFetchError(error);\n      }\n    };\n    const handleFetchError = async error => {\n      if (error.response && error.response.status === 401) {\n        try {\n          const tokenData = await refreshToken();\n          localStorage.setItem(\"access_token\", tokenData.access);\n          fetchData();\n          console.log(\"Token refreshed.\");\n        } catch (refreshError) {\n          const errorMessage = refreshError.response ? JSON.stringify(refreshError.response.data) : \"An error occurred while refreshing the token.\";\n          alert(errorMessage);\n          if (refreshError.response && (refreshError.response.status === 401 || refreshError.response.status === 403)) {\n            navigate(\"/login\");\n          }\n        }\n      } else {\n        const errorMessage = error.response ? JSON.stringify(error.response.data) : \"An error occurred.\";\n        alert(`Error fetching data: ${errorMessage}`);\n      }\n    };\n    fetchData();\n  }, [currentUser, navigate]);\n  const handleEdit = async hashId => {\n    try {\n      const updatedHash = await editHash(hashId, hashValue, description);\n      setHashData(prev => prev.map(hash => hash.id === hashId ? updatedHash : hash));\n    } catch (error) {\n      // Handle error (e.g., token expiration or other API issues)\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const newHash = await saveHash(hashValue, description);\n      setHashData(prev => [...prev, newHash]);\n    } catch (error) {\n      // Handle error (e.g., token expiration or other API issues)\n    }\n  };\n  return currentUser ? hashData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(DataTable, {\n      data: [hashData, setHashData]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(LoadingComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(NotLoggedInComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"hXA03HGbaoIZU9g0pyqwwWwJE3c=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useAuth","useNavigate","Link","fetchHashes","refreshToken","deleteHash","editHash","saveHash","MDBBtn","DataTable","ModalComponent","LoadingComponent","NotLoggedInComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","navigate","currentUser","hashData","setHashData","hashValue","setHashValue","description","setDescription","fetchData","data","error","handleFetchError","response","status","tokenData","localStorage","setItem","access","console","log","refreshError","errorMessage","JSON","stringify","alert","handleEdit","hashId","updatedHash","prev","map","hash","id","handleSave","newHash","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prcue/OneDrive/Curso 4/TFG GITT/5. Desarrollo/3. Frontend/frontend_v3/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport {\r\n  fetchHashes,\r\n  refreshToken,\r\n  deleteHash,\r\n  editHash,\r\n  saveHash,\r\n} from \"./apiServices\";\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport DataTable from \"./DataTable\";\r\nimport ModalComponent from \"./ModalComponent\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport NotLoggedInComponent from \"./NotLoggedInComponent\";\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  const [hashData, setHashData] = useState(null);\r\n  const [hashValue, setHashValue] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!currentUser) return;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = await fetchHashes();\r\n        setHashData(data);\r\n      } catch (error) {\r\n        handleFetchError(error);\r\n      }\r\n    };\r\n\r\n    const handleFetchError = async (error) => {\r\n      if (error.response && error.response.status === 401) {\r\n        try {\r\n          const tokenData = await refreshToken();\r\n          localStorage.setItem(\"access_token\", tokenData.access);\r\n          fetchData();\r\n          console.log(\"Token refreshed.\");\r\n        } catch (refreshError) {\r\n          const errorMessage = refreshError.response\r\n            ? JSON.stringify(refreshError.response.data)\r\n            : \"An error occurred while refreshing the token.\";\r\n          alert(errorMessage);\r\n\r\n          if (\r\n            refreshError.response &&\r\n            (refreshError.response.status === 401 ||\r\n              refreshError.response.status === 403)\r\n          ) {\r\n            navigate(\"/login\");\r\n          }\r\n        }\r\n      } else {\r\n        const errorMessage = error.response\r\n          ? JSON.stringify(error.response.data)\r\n          : \"An error occurred.\";\r\n        alert(`Error fetching data: ${errorMessage}`);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentUser, navigate]);\r\n\r\n  const handleEdit = async (hashId) => {\r\n    try {\r\n      const updatedHash = await editHash(hashId, hashValue, description);\r\n      setHashData((prev) =>\r\n        prev.map((hash) => (hash.id === hashId ? updatedHash : hash))\r\n      );\r\n    } catch (error) {\r\n      // Handle error (e.g., token expiration or other API issues)\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const newHash = await saveHash(hashValue, description);\r\n      setHashData((prev) => [...prev, newHash]);\r\n    } catch (error) {\r\n      // Handle error (e.g., token expiration or other API issues)\r\n    }\r\n  };\r\n\r\n  return currentUser ? (\r\n    hashData ? (\r\n      <>\r\n        <DataTable data={[hashData, setHashData]} />\r\n      </>\r\n    ) : (\r\n      <LoadingComponent />\r\n    )\r\n  ) : (\r\n    <NotLoggedInComponent />\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}