{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = \"http://localhost:8000\";\naxios.defaults.baseURL = BASE_URL;\n\n// Utility function to set up authenticated requests\nconst authHeader = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n};\nconst login = async credentials => {\n  try {\n    const response = await axios.post(\"/auth/token/\", credentials, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || \"Login failed\");\n  }\n};\nconst register = async userData => {\n  try {\n    const response = await axios.post(\"/auth/users/\", userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || \"Registration failed\");\n  }\n};\nconst fetchHashes = async () => {\n  try {\n    const response = await axios.get(\"/api/v1/hashes/\", {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst refreshToken = async () => {\n  try {\n    const response = await axios.post(\"/auth/token/refresh/\", {\n      refresh: localStorage.getItem(\"refresh_token\")\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || \"Refreshing token failed\");\n  }\n};\nconst deleteHash = async id => {\n  try {\n    const response = await axios.delete(`/api/v1/hashes/${id}/`, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || \"Deleting hash failed\");\n  }\n};\nconst editHash = async (id, hashValue, description) => {\n  try {\n    const body = {\n      hash_value: hashValue,\n      description: description\n    };\n    const response = await axios.put(`/api/v1/hashes/${id}/`, body, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || \"Editing hash failed\");\n  }\n};\nconst saveHash = async (hashValue, description) => {\n  try {\n    const body = {\n      hash_value: hashValue,\n      description: description\n    };\n    const response = await axios.post(\"/api/v1/hashes/\", body, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response6, _error$response6$data;\n    throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || \"Saving hash failed\");\n  }\n};\nexport { login, register, fetchHashes, refreshToken, deleteHash, editHash, saveHash };","map":{"version":3,"names":["axios","BASE_URL","defaults","baseURL","authHeader","token","localStorage","getItem","Authorization","login","credentials","response","post","headers","data","error","_error$response","_error$response$data","Error","detail","register","userData","_error$response2","_error$response2$data","fetchHashes","get","refreshToken","refresh","_error$response3","_error$response3$data","deleteHash","id","delete","_error$response4","_error$response4$data","editHash","hashValue","description","body","hash_value","put","_error$response5","_error$response5$data","saveHash","_error$response6","_error$response6$data"],"sources":["C:/Users/prcue/OneDrive/Curso 4/TFG GITT/5. Desarrollo/3. Frontend/frontend_v3/src/components/apiServices.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:8000\";\r\naxios.defaults.baseURL = BASE_URL;\r\n\r\n// Utility function to set up authenticated requests\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  return {\r\n    Authorization: `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n};\r\n\r\nconst login = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/token/\", credentials, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Login failed\");\r\n  }\r\n};\r\n\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await axios.post(\"/auth/users/\", userData, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Registration failed\");\r\n  }\r\n};\r\n\r\nconst fetchHashes = async () => {\r\n  try {\r\n    const response = await axios.get(\"/api/v1/hashes/\", {\r\n      headers: authHeader(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const response = await axios.post(\"/auth/token/refresh/\", {\r\n      refresh: localStorage.getItem(\"refresh_token\"),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Refreshing token failed\");\r\n  }\r\n};\r\n\r\nconst deleteHash = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`/api/v1/hashes/${id}/`, {\r\n      headers: authHeader(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Deleting hash failed\");\r\n  }\r\n};\r\n\r\nconst editHash = async (id, hashValue, description) => {\r\n  try {\r\n    const body = {\r\n      hash_value: hashValue,\r\n      description: description,\r\n    };\r\n    const response = await axios.put(`/api/v1/hashes/${id}/`, body, {\r\n      headers: authHeader(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Editing hash failed\");\r\n  }\r\n};\r\n\r\nconst saveHash = async (hashValue, description) => {\r\n  try {\r\n    const body = {\r\n      hash_value: hashValue,\r\n      description: description,\r\n    };\r\n    const response = await axios.post(\"/api/v1/hashes/\", body, {\r\n      headers: authHeader(),\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.detail || \"Saving hash failed\");\r\n  }\r\n};\r\n\r\nexport {\r\n  login,\r\n  register,\r\n  fetchHashes,\r\n  refreshToken,\r\n  deleteHash,\r\n  editHash,\r\n  saveHash,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}