{"ast":null,"code":"import axios from \"axios\";\nconst login = async credentials => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/auth/token/\", credentials, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst register = async userData => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/auth/users/\", userData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst fetchHashes = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:8000/api/v1/hashes/\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nconst refreshToken = async () => {\n  try {\n    const response = await axios.post(\"http://localhost:8000/auth/token/refresh/\", {\n      refresh: localStorage.getItem(\"refresh_token\")\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Utility function to set up authenticated requests\nconst authHeader = () => {\n  const token = localStorage.getItem(\"access_token\");\n  return {\n    Authorization: `Bearer ${token}`,\n    \"Content-Type\": \"application/json\"\n  };\n};\n\n// Function to delete a hash\nconst deleteHash = async id => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/api/v1/hashes/${id}/`, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to edit a hash\nconst editHash = async (id, hashValue, description) => {\n  try {\n    const body = {\n      hash_value: hashValue,\n      description: description\n    };\n    const response = await axios.put(`http://localhost:8000/api/v1/hashes/${id}/`, body, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to save a hash\nconst saveHash = async (hashValue, description) => {\n  try {\n    const body = {\n      hash_value: hashValue,\n      description: description\n    };\n    const response = await axios.post(\"http://localhost:8000/api/v1/hashes/\", body, {\n      headers: authHeader()\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport { login, register, fetchHashes, refreshToken, authHeader, deleteHash, editHash, saveHash };","map":{"version":3,"names":["axios","login","credentials","response","post","headers","data","error","register","userData","fetchHashes","get","Authorization","localStorage","getItem","refreshToken","refresh","authHeader","token","deleteHash","id","delete","editHash","hashValue","description","body","hash_value","put","saveHash"],"sources":["C:/Users/prcue/OneDrive/Curso 4/TFG GITT/5. Desarrollo/3. Frontend/frontend_v2/src/components/apiServices.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst login = async (credentials) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/auth/token/\",\r\n      credentials,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/auth/users/\",\r\n      userData,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst fetchHashes = async () => {\r\n  try {\r\n    const response = await axios.get(\"http://localhost:8000/api/v1/hashes/\", {\r\n      headers: {\r\n        Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst refreshToken = async () => {\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/auth/token/refresh/\",\r\n      {\r\n        refresh: localStorage.getItem(\"refresh_token\"),\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Utility function to set up authenticated requests\r\nconst authHeader = () => {\r\n  const token = localStorage.getItem(\"access_token\");\r\n  return {\r\n    Authorization: `Bearer ${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n};\r\n\r\n// Function to delete a hash\r\nconst deleteHash = async (id) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `http://localhost:8000/api/v1/hashes/${id}/`,\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to edit a hash\r\nconst editHash = async (id, hashValue, description) => {\r\n  try {\r\n    const body = {\r\n      hash_value: hashValue,\r\n      description: description,\r\n    };\r\n    const response = await axios.put(\r\n      `http://localhost:8000/api/v1/hashes/${id}/`,\r\n      body,\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Function to save a hash\r\nconst saveHash = async (hashValue, description) => {\r\n  try {\r\n    const body = {\r\n      hash_value: hashValue,\r\n      description: description,\r\n    };\r\n    const response = await axios.post(\r\n      \"http://localhost:8000/api/v1/hashes/\",\r\n      body,\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport {\r\n  login,\r\n  register,\r\n  fetchHashes,\r\n  refreshToken,\r\n  authHeader,\r\n  deleteHash,\r\n  editHash,\r\n  saveHash,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}